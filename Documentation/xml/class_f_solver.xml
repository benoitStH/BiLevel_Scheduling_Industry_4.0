<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_f_solver" kind="class" language="C++" prot="public">
    <compoundname>FSolver</compoundname>
    <basecompoundref refid="class_i_sub_solver" prot="public" virt="non-virtual">ISubSolver</basecompoundref>
    <includes refid="_f_solver_8h" local="no">FSolver.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_f_solver_1a22332f12ab5b0fb8c86eb811e9befc1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FSolver::FSolver</definition>
        <argsstring>()</argsstring>
        <name>FSolver</name>
        <qualifiedname>FSolver::FSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" line="10" column="1" bodyfile="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_f_solver_1aeea07c61587a8738e84765766ca7054f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FSolver::FSolver</definition>
        <argsstring>(std::vector&lt; IFollowerSwapRule * &gt; listRule)</argsstring>
        <name>FSolver</name>
        <qualifiedname>FSolver::FSolver</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_i_follower_swap_rule" kindref="compound">IFollowerSwapRule</ref> * &gt;</type>
          <declname>listRule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" line="12" column="1" bodyfile="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_f_solver_1ad241b424de5b70b7713cd6368662fd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FSolver::heuristic</definition>
        <argsstring>()</argsstring>
        <name>heuristic</name>
        <qualifiedname>FSolver::heuristic</qualifiedname>
        <reimplements refid="class_i_sub_solver_1aabcd791e0b699d2afec42a5c538eb241">heuristic</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method which solves the lexicographic problem of the Follower Lex(sum Cj, Sum wjUj) An initial solution must be generated before calling this method The solution attribute will contain the final solution found by the heuristic after calling this method <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" line="25" column="14" bodyfile="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.cpp" bodystart="3" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_f_solver_1a1c98281cd23aeca889aa249f6c1732c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string FSolver::getHeuristicName</definition>
        <argsstring>() const</argsstring>
        <name>getHeuristicName</name>
        <qualifiedname>FSolver::getHeuristicName</qualifiedname>
        <reimplements refid="class_i_sub_solver_1a76eeec69a402acd777e21093cbcd7055">getHeuristicName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" line="31" column="21" bodyfile="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_f_solver_1abf5b6067df1f6c054ebb718f7df4e072" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string FSolver::getHeuristicDescription</definition>
        <argsstring>() const</argsstring>
        <name>getHeuristicDescription</name>
        <qualifiedname>FSolver::getHeuristicDescription</qualifiedname>
        <reimplements refid="class_i_sub_solver_1a8bdaad5babdc23c22368cda377097e91">getHeuristicDescription</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" line="33" column="21" bodyfile="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.cpp" bodystart="180" bodyend="191"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>FSolver</label>
        <link refid="class_f_solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ISubSolver</label>
        <link refid="class_i_sub_solver"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>FSolver</label>
        <link refid="class_f_solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ISubSolver</label>
        <link refid="class_i_sub_solver"/>
        <childnode refid="3" relation="usage">
          <edgelabel>solution</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>verbose</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Solution</label>
        <link refid="class_solution"/>
      </node>
      <node id="4">
        <label>Verbose</label>
        <link refid="class_verbose"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" line="6" column="1" bodyfile="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/FSolver.h" bodystart="7" bodyend="34"/>
    <listofallmembers>
      <member refid="class_i_sub_solver_1a2dbc48b0cf0d2cfa21c9938ecf323449" prot="public" virt="non-virtual"><scope>FSolver</scope><name>addRule</name></member>
      <member refid="class_f_solver_1a22332f12ab5b0fb8c86eb811e9befc1b" prot="public" virt="non-virtual"><scope>FSolver</scope><name>FSolver</name></member>
      <member refid="class_f_solver_1aeea07c61587a8738e84765766ca7054f" prot="public" virt="non-virtual"><scope>FSolver</scope><name>FSolver</name></member>
      <member refid="class_i_sub_solver_1a3a1fe2f8a959e8cc725715d08e8361c2" prot="public" virt="non-virtual"><scope>FSolver</scope><name>generateInitialSolution</name></member>
      <member refid="class_f_solver_1abf5b6067df1f6c054ebb718f7df4e072" prot="public" virt="virtual"><scope>FSolver</scope><name>getHeuristicDescription</name></member>
      <member refid="class_f_solver_1a1c98281cd23aeca889aa249f6c1732c3" prot="public" virt="virtual"><scope>FSolver</scope><name>getHeuristicName</name></member>
      <member refid="class_i_sub_solver_1a3e4ed988e91a7ccd3e69fa60f7c563b1" prot="public" virt="non-virtual"><scope>FSolver</scope><name>getSolution</name></member>
      <member refid="class_f_solver_1ad241b424de5b70b7713cd6368662fd8c" prot="public" virt="virtual"><scope>FSolver</scope><name>heuristic</name></member>
      <member refid="class_i_sub_solver_1a70d4df07cc36fbd62373c580574138b8" prot="public" virt="non-virtual"><scope>FSolver</scope><name>ISubSolver</name></member>
      <member refid="class_i_sub_solver_1a5e0b5557d3051e378654ae89f31e85ff" prot="public" virt="non-virtual"><scope>FSolver</scope><name>ISubSolver</name></member>
      <member refid="class_i_sub_solver_1a0d3492749bc7822ff5a8d799838b10a3" prot="protected" virt="non-virtual"><scope>FSolver</scope><name>listRules</name></member>
      <member refid="class_i_sub_solver_1a83155cc19e3ad6ad551d42aaa68788af" prot="public" virt="non-virtual"><scope>FSolver</scope><name>setSolution</name></member>
      <member refid="class_i_sub_solver_1afa2b56137f238099398cf26e2a6e68c4" prot="protected" virt="non-virtual"><scope>FSolver</scope><name>solution</name></member>
      <member refid="class_i_sub_solver_1a5a9d2be3579e871de93067c1ae7a48f9" prot="protected" virt="non-virtual"><scope>FSolver</scope><name>verbose</name></member>
      <member refid="class_i_sub_solver_1a3952b6a2f3a0138ff7bde989db7c7e08" prot="public" virt="non-virtual"><scope>FSolver</scope><name>~ISubSolver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

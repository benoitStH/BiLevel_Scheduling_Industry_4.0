<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_parser_8cpp" kind="file" language="C++">
    <compoundname>Parser.cpp</compoundname>
    <includes refid="_parser_8h" local="yes">Parser.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="20">
        <label>IFollowerSwapRule.h</label>
        <link refid="_i_follower_swap_rule_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ILeaderSelectRule.h</label>
        <link refid="_i_leader_select_rule_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ISolver.h</label>
        <link refid="_i_solver_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ISubSolver.h</label>
        <link refid="_i_sub_solver_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Instance.h</label>
        <link refid="_instance_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Job.h</label>
        <link refid="_job_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Machine.h</label>
        <link refid="_machine_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/Parser.cpp</label>
        <link refid="_parser_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Parser.h</label>
        <link refid="_parser_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Rule.h</label>
        <link refid="_rule_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Solution.h</label>
        <link refid="_solution_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Verbose.h</label>
        <link refid="_verbose_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>filesystem</label>
      </node>
      <node id="22">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>ostream</label>
      </node>
      <node id="7">
        <label>random</label>
      </node>
      <node id="21">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>EA<sp/>6300<sp/>ERL<sp/>CNRS<sp/>7002<sp/>Laboratoire<sp/>d&apos;Informatique<sp/>Fondamentale<sp/>et<sp/>Appliqu√©e<sp/>de<sp/>Tours,<sp/>Tours,<sp/>France</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DIGEP,<sp/>Politecnico<sp/>di<sp/>Torino,<sp/>Corso<sp/>Duca<sp/>degli<sp/>Abruzzi<sp/>24,<sp/>Torino,<sp/>Italy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>bilevel-scheduling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>bilevel-scheduling<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>bilevel-scheduling<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>along<sp/>with<sp/>bilevel-scheduling.<sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>schau<sp/>on<sp/>1/15/24.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_parser_8h" kindref="compound">Parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="class_parser_1a12234f6cd36b61af4b50c94a179422c1" kindref="member">Parser::Parser</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="class_instance" kindref="compound">Instance</ref><sp/><ref refid="class_parser_1a8595b4db00b5283e1b3e9d1130c71476" kindref="member">Parser::readFromFile</ref>(std::string&amp;<sp/>filePath)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(2);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Generating<sp/>instance<sp/>from<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filePath<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;...\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_instance" kindref="compound">Instance</ref><sp/>newInstance<sp/>=<sp/><ref refid="class_instance" kindref="compound">Instance</ref>(filePath);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>fileStream(newInstance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal(),<sp/>std::fstream::in);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>line;<sp/></highlight><highlight class="comment">//<sp/>new<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>and<sp/>read<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileStream.is_open())<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(fileStream,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>don&apos;t<sp/>find<sp/>the<sp/>&apos;:&apos;<sp/>then<sp/>we<sp/>read<sp/>jobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>job,<sp/>the<sp/>value<sp/>should<sp/>be<sp/>separate<sp/>with<sp/>\t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>stream(line);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pi,<sp/>di,<sp/>wi;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>pi;<sp/>stream<sp/>&gt;&gt;<sp/>di;<sp/>stream<sp/>&gt;&gt;<sp/>wi;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_job" kindref="compound">Job</ref><sp/>newJob<sp/>=<sp/><ref refid="class_job" kindref="compound">Job</ref>(pi,<sp/>di,<sp/>wi,<sp/>num);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newInstance.<ref refid="class_instance_1a197d24f4a2fe13a3d129d2e9c60567cc" kindref="member">add_job</ref>(newJob);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>read<sp/>so<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>attribute<sp/>=<sp/>line.substr(0,<sp/>pos);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1af43bb7dbaacc0e36e2c8687b87d73941" kindref="member">setInstanceName</ref>(line.substr(pos<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1a02258c39bce2f8341f0fc9b200711847" kindref="member">setNbJobs</ref>(std::stoul(line.substr(pos<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1a344891b499b7913ce0436dafe357f510" kindref="member">setNbToSelectJob</ref>(std::stoul(line.substr(pos<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;M_max&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1a7580ec4bce287afecf0ec61b1eee40d1" kindref="member">setNbOfHighSpeedMachines</ref>(std::stoul(line.substr(pos<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;M_0&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1a751b4109a32a2f3c92d842094a65063f" kindref="member">setNbOfLowSpeedMachines</ref>(std::stoul(line.substr(pos<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;V_max&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1a1040ceebed59623c539a4f5b277f3fab" kindref="member">setHighSpeed</ref>(std::stoul(line.substr(pos<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;V_0&quot;</highlight><highlight class="normal">)<sp/>newInstance.<ref refid="class_instance_1ac034c41c0cff359204af7043b0f850d6" kindref="member">setLowSpeed</ref>(std::stoul(line.substr(pos<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;Jobs&quot;</highlight><highlight class="normal">)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>newInstance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal().string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>format<sp/>is<sp/>incorrect\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>newInstance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal().string());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fileStream.close();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>have<sp/>the<sp/>right<sp/>number<sp/>of<sp/>created<sp/>job</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newInstance.<ref refid="class_instance_1a335847c369f7a03f1a70fa84f02cd851" kindref="member">getNbJobs</ref>()<sp/>!=<sp/>newInstance.<ref refid="class_instance_1a4862c780b82a3d1b59657cd33cc4d6b0" kindref="member">getListJobs</ref>().size())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>jobs<sp/>is<sp/>not<sp/>equals<sp/>to<sp/>N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newInstance.<ref refid="class_instance_1a9d0d21d4bc42916a36611f2caf3f47f2" kindref="member">getNbToSelectJob</ref>()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>jobs<sp/>to<sp/>select<sp/>is<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Affiche<sp/>l&apos;instance<sp/>g√©n√©r√©e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(3);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/>newInstance;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newInstance;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_parser_1a46c3b6aa36af35d4468723876d7f07c9" kindref="member">Parser::serializeInstance</ref>(<ref refid="class_instance" kindref="compound">Instance</ref>&amp;<sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Serializing<sp/>instance<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().string()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>fileStream(instance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal().string(),<sp/>std::fstream::out);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileStream.is_open())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;name:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1af1ee9b120fe449adee7c34209844e107" kindref="member">getInstanceName</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a335847c369f7a03f1a70fa84f02cd851" kindref="member">getNbJobs</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;n:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a335847c369f7a03f1a70fa84f02cd851" kindref="member">getNbJobs</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M_max:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M_0:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a4295bd3d930f2832bc7e1d94084392e5" kindref="member">getNbOfLowSpeedMachines</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V_max:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a3db3374f300738c02d9180327e1714ae" kindref="member">getHighSpeed</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V_0:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1acab3b525d6b7ae7455f0c0e33fd88f52" kindref="member">getLowSpeed</ref>()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Jobs:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_job" kindref="compound">Job</ref>&amp;<sp/>job<sp/>:<sp/>instance.getListJobs())<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>job.getPi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>job.getDi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>job.getWi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>instance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal().string());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>fileStream.close();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Done\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*<sp/>Method<sp/>which<sp/>save<sp/>the<sp/>given<sp/>instance&apos;s<sp/>best<sp/>solution<sp/>found<sp/>by<sp/>the<sp/>given<sp/>solver</highlight></codeline>
<codeline lineno="128"><highlight class="comment">*<sp/>The<sp/>result<sp/>is<sp/>appended<sp/>into<sp/>the<sp/>given<sp/>file<sp/>with<sp/>a<sp/>specific<sp/>format<sp/>(cf<sp/>ReadMe.md)</highlight></codeline>
<codeline lineno="129"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="comment">*<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>solver<sp/>already<sp/>solved<sp/>the<sp/>instance<sp/>and<sp/>has<sp/>a<sp/>solution<sp/>(optimal<sp/>or<sp/>not)</highlight></codeline>
<codeline lineno="131"><highlight class="comment">*<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>file,<sp/>whose<sp/>path<sp/>was<sp/>given,<sp/>already<sp/>exist<sp/>and<sp/>contains<sp/>the<sp/>header&apos;s</highlight></codeline>
<codeline lineno="132"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="comment">*<sp/>@param<sp/>filePath<sp/>The<sp/>file<sp/>where<sp/>data<sp/>will<sp/>be<sp/>append</highlight></codeline>
<codeline lineno="134"><highlight class="comment">*<sp/>@param<sp/>solver<sp/>The<sp/>solver<sp/>which<sp/>solved<sp/>the<sp/>instance,<sp/>contains<sp/>the<sp/>solution<sp/>and<sp/>its<sp/>resolution<sp/>time</highlight></codeline>
<codeline lineno="135"><highlight class="comment">*<sp/>@param<sp/>optimal_objective<sp/>The<sp/>sum<sp/>wjUj<sp/>found<sp/>by<sp/>an<sp/>exact<sp/>method.<sp/>Used<sp/>to<sp/>compute<sp/>derivation.</highlight></codeline>
<codeline lineno="136"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_parser_1ade48868713be272ea3e8e3f5cac7c998" kindref="member">Parser::saveInFile</ref>(std::string&amp;<sp/>filepath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_solver" kindref="compound">ISolver</ref>*<sp/>solver,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optimal_objective)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>the<sp/>instance&apos;s<sp/>file<sp/>path<sp/>and<sp/>the<sp/>solver&apos;s<sp/>best<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_instance" kindref="compound">Instance</ref>&amp;<sp/>instance<sp/>=<sp/>*(solver-&gt;<ref refid="class_i_solver_1aa3e5a1c200e50c10dda6e45dc6ae9ad7" kindref="member">getInstance</ref>());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>instanceFile<sp/>=<sp/>instance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal().string();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_solution" kindref="compound">Solution</ref>&amp;<sp/>solution<sp/>=<sp/>*(solver-&gt;<ref refid="class_i_solver_1a4b725d604db8a2fc73e67c150656c680" kindref="member">getSolution</ref>());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Saving<sp/>best<sp/>solution...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Opening<sp/>the<sp/>file<sp/>to<sp/>append<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>fileStream(filepath,<sp/>std::fstream::in<sp/>|<sp/>std::fstream::out<sp/>|<sp/>std::fstream::app);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileStream.is_open())<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InstanceName,<sp/>instanceFile,<sp/>sum<sp/>Cj,<sp/>fonction<sp/>objective<sp/>(sum<sp/>wjUj),<sp/>objective<sp/>fonction<sp/>value<sp/>to<sp/>compare<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>N,<sp/>n,<sp/>number<sp/>of<sp/>machines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1af1ee9b120fe449adee7c34209844e107" kindref="member">getInstanceName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instanceFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1a4776d6079d6fe2db17c019beb82fc34d" kindref="member">getSumCj</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1ab042499bb5b5ba01477099aeee3b787f" kindref="member">getSumWjUj</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>optimal_objective<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a4862c780b82a3d1b59657cd33cc4d6b0" kindref="member">getListJobs</ref>().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a9d0d21d4bc42916a36611f2caf3f47f2" kindref="member">getNbToSelectJob</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>()<sp/>+<sp/>instance.<ref refid="class_instance_1a4295bd3d930f2832bc7e1d94084392e5" kindref="member">getNbOfLowSpeedMachines</ref>()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HighSpeed<sp/>Scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>();<sp/>l++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbJobs<sp/>=<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(l).<ref refid="class_machine_1aab1ac76407939e7ee6742962bb6c1e27" kindref="member">getAffectedJob</ref>().size();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nbJobs;<sp/>j++)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(l)[j].getNum()<sp/>&lt;&lt;<sp/>(j<sp/>&lt;<sp/>nbJobs<sp/>-<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LowSpeed<sp/>Scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>instance.<ref refid="class_instance_1a4295bd3d930f2832bc7e1d94084392e5" kindref="member">getNbOfLowSpeedMachines</ref>();<sp/>l++)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>l<sp/>+<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbJobs<sp/>=<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(pos).<ref refid="class_machine_1aab1ac76407939e7ee6742962bb6c1e27" kindref="member">getAffectedJob</ref>().size();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(pos).<ref refid="class_machine_1aab1ac76407939e7ee6742962bb6c1e27" kindref="member">getAffectedJob</ref>().size();<sp/>j++)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(pos)[j].getNum()<sp/>&lt;&lt;<sp/>(j<sp/>&lt;<sp/>nbJobs<sp/>-<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Heuristic&apos;s<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solver-&gt;<ref refid="class_i_solver_1abcb7265471377e5247dec52b61ccc9e4" kindref="member">getHeuristicName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Description<sp/>and<sp/>paramters<sp/>(rules<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solver-&gt;<ref refid="class_i_solver_1a15d727748af5b718c85854e688f4e319" kindref="member">getHeuristicDescription</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>in<sp/>microseconds<sp/>to<sp/>solve<sp/>the<sp/>instance<sp/>saved<sp/>as<sp/>time<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solver-&gt;<ref refid="class_i_solver_1a0372e9a230cff150ff24de5fc3c6000a" kindref="member">getTimeResol</ref>()/1000000.0<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deviation<sp/>from<sp/>the<sp/>optimale_objective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optimal_objective<sp/>==<sp/>0)<sp/>{<sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-1;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deviation<sp/>=<sp/>(solution.<ref refid="class_solution_1ab042499bb5b5ba01477099aeee3b787f" kindref="member">getSumWjUj</ref>()<sp/>-<sp/>optimal_objective)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)optimal_objective;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>deviation<sp/>*<sp/>100<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accuracy<sp/>toward<sp/>the<sp/>optimale_objective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optimal_objective<sp/>==<sp/>0)<sp/>{<sp/>(solution.<ref refid="class_solution_1ab042499bb5b5ba01477099aeee3b787f" kindref="member">getSumWjUj</ref>()<sp/>!=<sp/>0<sp/>?<sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0;&quot;</highlight><highlight class="normal"><sp/>:<sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1;&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>precision;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solution.<ref refid="class_solution_1ab042499bb5b5ba01477099aeee3b787f" kindref="member">getSumWjUj</ref>()<sp/>==<sp/>0)<sp/>{<sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>optimal_objective<sp/>/<sp/>float(solution.<ref refid="class_solution_1ab042499bb5b5ba01477099aeee3b787f" kindref="member">getSumWjUj</ref>());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>precision<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filepath);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>fileStream.close();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(2);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Done\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="240"><highlight class="comment">*<sp/>This<sp/>Method<sp/>saves<sp/>the<sp/>solver&apos;s<sp/>solution<sp/>in<sp/>the<sp/>given<sp/>file</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*<sp/>The<sp/>result<sp/>is<sp/>appended<sp/>into<sp/>the<sp/>given<sp/>file<sp/>with<sp/>a<sp/>specific<sp/>format<sp/>(cf<sp/>ReadMe.md)</highlight></codeline>
<codeline lineno="242"><highlight class="comment">*</highlight></codeline>
<codeline lineno="243"><highlight class="comment">*<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>solver<sp/>already<sp/>solved<sp/>the<sp/>instance<sp/>and<sp/>has<sp/>a<sp/>solution<sp/>(optimal<sp/>or<sp/>not)</highlight></codeline>
<codeline lineno="244"><highlight class="comment">*<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>file,<sp/>whose<sp/>path<sp/>was<sp/>given,<sp/>already<sp/>exist<sp/>and<sp/>contains<sp/>the<sp/>header&apos;s</highlight></codeline>
<codeline lineno="245"><highlight class="comment">*</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*<sp/>@param<sp/>filePath<sp/>The<sp/>file<sp/>where<sp/>data<sp/>will<sp/>be<sp/>append</highlight></codeline>
<codeline lineno="247"><highlight class="comment">*<sp/>@param<sp/>solver<sp/>The<sp/>solver<sp/>which<sp/>solved<sp/>the<sp/>instance,<sp/>contains<sp/>the<sp/>solution<sp/>and<sp/>its<sp/>resolution<sp/>time</highlight></codeline>
<codeline lineno="248"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_parser_1a2d8c3d982450c1174b2b26245a2cee4b" kindref="member">Parser::saveSolutionInFile</ref>(std::string&amp;<sp/>filepath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_solver" kindref="compound">ISolver</ref>*<sp/>solver)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>the<sp/>instance&apos;s<sp/>file<sp/>path<sp/>and<sp/>the<sp/>solver&apos;s<sp/>best<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_instance" kindref="compound">Instance</ref>&amp;<sp/>instance<sp/>=<sp/>*(solver-&gt;<ref refid="class_i_solver_1aa3e5a1c200e50c10dda6e45dc6ae9ad7" kindref="member">getInstance</ref>());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>instanceFile<sp/>=<sp/>instance.<ref refid="class_instance_1af1a88e81397fddb12e1ec27223c7090a" kindref="member">getInstancePath</ref>().lexically_normal().string();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_solution" kindref="compound">Solution</ref>&amp;<sp/>solution<sp/>=<sp/>*(solver-&gt;<ref refid="class_i_solver_1a4b725d604db8a2fc73e67c150656c680" kindref="member">getSolution</ref>());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(2);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Saving<sp/>best<sp/>solution...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Opening<sp/>the<sp/>file<sp/>to<sp/>append<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>fileStream(filepath,<sp/>std::fstream::in<sp/>|<sp/>std::fstream::out<sp/>|<sp/>std::fstream::app);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileStream.is_open())<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InstanceName,<sp/>instanceFile,<sp/>sum<sp/>Cj,<sp/>fonction<sp/>objective<sp/>(sum<sp/>wjUj),<sp/>N,<sp/>n,<sp/>number<sp/>of<sp/>machines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1af1ee9b120fe449adee7c34209844e107" kindref="member">getInstanceName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instanceFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1a4776d6079d6fe2db17c019beb82fc34d" kindref="member">getSumCj</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1ab042499bb5b5ba01477099aeee3b787f" kindref="member">getSumWjUj</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a4862c780b82a3d1b59657cd33cc4d6b0" kindref="member">getListJobs</ref>().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a9d0d21d4bc42916a36611f2caf3f47f2" kindref="member">getNbToSelectJob</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>()<sp/>+<sp/>instance.<ref refid="class_instance_1a4295bd3d930f2832bc7e1d94084392e5" kindref="member">getNbOfLowSpeedMachines</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HighSpeed<sp/>Scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>();<sp/>l++)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbJobs<sp/>=<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(l).<ref refid="class_machine_1aab1ac76407939e7ee6742962bb6c1e27" kindref="member">getAffectedJob</ref>().size();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nbJobs;<sp/>j++)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(l)[j].getNum()<sp/>&lt;&lt;<sp/>(j<sp/>&lt;<sp/>nbJobs<sp/>-<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LowSpeed<sp/>Scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>instance.<ref refid="class_instance_1a4295bd3d930f2832bc7e1d94084392e5" kindref="member">getNbOfLowSpeedMachines</ref>();<sp/>l++)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>l<sp/>+<sp/>instance.<ref refid="class_instance_1a983469731bdc65611ba0e862be0b87c1" kindref="member">getNbOfHighSpeedMachines</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbJobs<sp/>=<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(pos).<ref refid="class_machine_1aab1ac76407939e7ee6742962bb6c1e27" kindref="member">getAffectedJob</ref>().size();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(pos).<ref refid="class_machine_1aab1ac76407939e7ee6742962bb6c1e27" kindref="member">getAffectedJob</ref>().size();<sp/>j++)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solution.<ref refid="class_solution_1a8abed3f8eeb774c83fe559abb20431f6" kindref="member">getMachine</ref>(pos)[j].getNum()<sp/>&lt;&lt;<sp/>(j<sp/>&lt;<sp/>nbJobs<sp/>-<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Heuristic&apos;s<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solver-&gt;<ref refid="class_i_solver_1abcb7265471377e5247dec52b61ccc9e4" kindref="member">getHeuristicName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Description<sp/>and<sp/>paramters<sp/>(rules<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solver-&gt;<ref refid="class_i_solver_1a15d727748af5b718c85854e688f4e319" kindref="member">getHeuristicDescription</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>in<sp/>microseconds<sp/>to<sp/>solve<sp/>the<sp/>instance<sp/>saved<sp/>as<sp/>time<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/>solver-&gt;<ref refid="class_i_solver_1a0372e9a230cff150ff24de5fc3c6000a" kindref="member">getTimeResol</ref>()<sp/>/<sp/>1000000.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileStream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filepath);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>fileStream.close();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1acc7a995da9e05168fa881f0d3ada8250" kindref="member">setRequiredLevel</ref>(2);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Done\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>verbose.<ref refid="class_verbose_1a48a6ad9f4c7d2541aa87fd3b9374c65d" kindref="member">endRequiredLevel</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/benhi/source/repos/BiLevel_Scheduling_Industry_4.0/BiLevel_Scheduling_Industry_4.0/Parser.cpp"/>
  </compounddef>
</doxygen>
